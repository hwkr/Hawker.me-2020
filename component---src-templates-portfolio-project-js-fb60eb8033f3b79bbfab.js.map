{"version":3,"sources":["webpack:///./src/templates/portfolio-project.js"],"names":["PortfolioProjectPage","state","galleryMaximized","toggleGalleryMaximized","m","setState","render","this","props","data","pageContext","portfolioYaml","title","description","tags","links","background","childrenPortfolioGalleryYaml","className","classNames","style","backgroundImage","dangerouslySetInnerHTML","__html","map","link","i","href","key","target","startsWith","icon","name","label","image","section","alt","childFileYaml","data-content","onClick","role","tabIndex","onKeyPress","handleKeyPress","id","fluid","childImageSharp","prevEntry","to","fields","slug","nextEntry","Component"],"mappings":"gSAWqBA,E,oJACnBC,MAAQ,CACNC,kBAAkB,G,EAGpBC,uBAAyB,WACvB,IAA0BC,EAAM,EAAKH,MAA7BC,iBACR,EAAKG,SAAS,CAAEH,kBAAmBE,K,sCAGrCE,OAAA,WAAU,IAAD,OACP,EAA8BC,KAAKC,MAA3BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,YACd,EAOID,EAAKE,cANPC,EADF,EACEA,MACAC,EAFF,EAEEA,YACAC,EAHF,EAGEA,KACAC,EAJF,EAIEA,MACAC,EALF,EAKEA,WACAC,EANF,EAMEA,6BAGMf,EAAqBK,KAAKN,MAA1BC,iBAER,OACE,kBAAC,IAAD,CAAQgB,UAAWC,IAAW,oBAAqB,CAAE,oBAAqBjB,KACxE,kBAAC,IAAD,CAAQU,MAAOA,IACf,yBAAKM,UAAU,8BACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,cAAcE,MAAO,CAAEC,gBAAgB,QAASL,EAAV,OACnD,yBAAKE,UAAU,iBAAiBN,GAChC,yBAAKM,UAAU,2BACb,kBAAC,IAAD,CAAaJ,KAAMA,MAIvB,yBAAKI,UAAU,YAAYI,wBAAyB,CAAEC,OAAQV,KAC5DE,EACA,yBAAKG,UAAU,eACXH,EAAMS,KAAI,SAACC,EAAMC,GAAP,OACV,uBAAGC,KAAMF,EAAKE,KAAMT,UAAWC,IAAW,MAAO,CAAE,WAAYO,EAAI,IAAME,IAAKF,EAAGG,OAAQJ,EAAKE,KAAKG,WAAW,QAAU,SAAW,IAC/HL,EAAKM,KAAO,8BAAM,kBAAC,IAAD,CAAMC,KAAMP,EAAKM,OAAvB,KAA+C,GAC5DN,EAAKQ,WAIV,KAIR,yBAAKf,UAAU,oCACXD,EAA6BO,KAAI,SAACU,EAAOR,GACzC,IAAQS,EAAgCD,EAAhCC,QAASC,EAAuBF,EAAvBE,IAAKC,EAAkBH,EAAlBG,cACtB,OAAIF,EAEA,yBAAKjB,UAAU,sBAAsBoB,eAAcH,EAASP,IAAKF,IAInE,uBAAGR,UAAU,4BAA4BS,KAAI,IAAMU,EAAcL,KAAQO,QAAS,EAAKpC,uBAAwBqC,KAAK,SAASC,SAAU,EAAGC,WAAY,EAAKC,eAAgBf,IAAKF,EAAGkB,GAAIP,EAAcL,MACnM,yBAAKd,UAAU,cACb,kBAAC,IAAD,CAAKA,UAAU,iBAAiB2B,MAAOR,EAAcS,gBAAgBD,MAAOT,IAAKA,WAO7F,wBAAIlB,UAAU,cACVR,EAAYqC,UACZ,wBAAI7B,UAAU,uBACZ,kBAAC,IAAD,CAAM8B,GAAItC,EAAYqC,UAAUE,OAAOC,MACrC,yBAAKhC,UAAU,sBAAf,YACA,yBAAKA,UAAU,sBAAsBR,EAAYqC,UAAUnC,SAG7D,GAEFF,EAAYyC,UACZ,wBAAIjC,UAAU,uBACZ,kBAAC,IAAD,CAAM8B,GAAItC,EAAYyC,UAAUF,OAAOC,MACrC,yBAAKhC,UAAU,sBAAf,QACA,yBAAKA,UAAU,sBAAsBR,EAAYyC,UAAUvC,SAG7D,O,GAtFkCwC","file":"component---src-templates-portfolio-project-js-fb60eb8033f3b79bbfab.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport classNames from 'classnames';\n\nimport Helmet from 'react-helmet';\n\nimport Layout from '../components/parts/Layout';\nimport Icon from '../components/common/Icon';\nimport ProjectTags from '../components/common/ProjectTags';\n\nexport default class PortfolioProjectPage extends Component {\n  state = {\n    galleryMaximized: false,\n  }\n\n  toggleGalleryMaximized = () => {\n    const { galleryMaximized: m } = this.state;\n    this.setState({ galleryMaximized: !m });\n  }\n\n  render() {\n    const { data, pageContext } = this.props;\n    const {\n      title,\n      description,\n      tags,\n      links,\n      background,\n      childrenPortfolioGalleryYaml,\n    } = data.portfolioYaml;\n\n    const { galleryMaximized } = this.state;\n\n    return (\n      <Layout className={classNames('portfolio-project', { 'gallery-maximized': galleryMaximized })}>\n        <Helmet title={title} />\n        <div className=\"container grid-960 project\">\n          <div className=\"columns\">\n            <div className=\"column col-md-12 project-info\">\n              <div className=\"card\">\n                <div className=\"card-header\" style={{ backgroundImage: `url(\"${background}\")` }}>\n                  <div className=\"card-title h2\">{title}</div>\n                  <div className=\"card-subtitle text-gray\">\n                    <ProjectTags tags={tags} />\n                  </div>\n                </div>\n                { /* eslint-disable-next-line react/no-danger */ }\n                <div className=\"card-body\" dangerouslySetInnerHTML={{ __html: description }} />\n                { links ? (\n                  <div className=\"card-footer\">\n                    { links.map((link, i) => (\n                      <a href={link.href} className={classNames('btn', { 'btn-link': i > 0 })} key={i} target={link.href.startsWith('http') ? '_blank' : ''}>\n                        { link.icon ? <span><Icon name={link.icon} />&nbsp;</span> : '' }\n                        {link.label}\n                      </a>\n                    ))}\n                  </div>\n                ) : ''}\n\n              </div>\n            </div>\n            <div className=\"column col-md-12 project-gallery\">\n              { childrenPortfolioGalleryYaml.map((image, i) => {\n                const { section, alt, childFileYaml } = image;\n                if (section) {\n                  return (\n                    <div className=\"divider text-center\" data-content={section} key={i} />\n                  );\n                }\n                return (\n                  <a className=\"card project-gallery-item\" href={`#${childFileYaml.name}`} onClick={this.toggleGalleryMaximized} role=\"button\" tabIndex={0} onKeyPress={this.handleKeyPress} key={i} id={childFileYaml.name}>\n                    <div className=\"card-image\">\n                      <Img className=\"img-responsive\" fluid={childFileYaml.childImageSharp.fluid} alt={alt} />\n                    </div>\n                  </a>\n                );\n              })}\n            </div>\n          </div>\n          <ul className=\"pagination\">\n            { pageContext.prevEntry ? (\n              <li className=\"page-item page-prev\">\n                <Link to={pageContext.prevEntry.fields.slug}>\n                  <div className=\"page-item-subtitle\">Previous</div>\n                  <div className=\"page-item-title h5\">{pageContext.prevEntry.title}</div>\n                </Link>\n              </li>\n            ) : ''\n            }\n            { pageContext.nextEntry ? (\n              <li className=\"page-item page-next\">\n                <Link to={pageContext.nextEntry.fields.slug}>\n                  <div className=\"page-item-subtitle\">Next</div>\n                  <div className=\"page-item-title h5\">{pageContext.nextEntry.title}</div>\n                </Link>\n              </li>\n            ) : ''\n            }\n          </ul>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    portfolioYaml(fields: { slug: { eq: $slug } }) {\n      title\n      description\n      background\n      date\n      tags\n      links {\n        href\n        icon\n        label\n      }\n      childrenPortfolioGalleryYaml {\n        alt\n        caption\n        section\n        childFileYaml {\n          name\n          childImageSharp {\n            fluid(maxWidth: 960) {\n              ...GatsbyImageSharpFluid_tracedSVG\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}