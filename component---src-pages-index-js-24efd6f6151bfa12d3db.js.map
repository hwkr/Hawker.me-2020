{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["IndexPage","openChat","data","props","window","open","site","siteMetadata","chat_url","render","this","socialLinks","social_links","tagSpec","tag_spec","portfolioProjects","allPortfolioYaml","edges","map","e","node","className","showNavbar","data-tooltip","onClick","type","name","size","links","linkClass","id","hidden","defaultChecked","t","i","key","project","title","tags","background","childFileYaml","slug","fields","tagNums","tag","findIndex","data-tag","n","join","to","style","backgroundImage","fluid","childImageSharp","alt","htmlFor","icon","label","Component"],"mappings":"gQAYqBA,E,oJAKnBC,SAAW,WACT,IAAQC,EAAS,EAAKC,MAAdD,KAC4E,OAApFE,OAAOC,KAAKH,EAAKI,KAAKC,aAAaC,SAAU,YAAa,0BAAiC,G,sCAG7FC,OAAA,WACE,IAAQP,EAASQ,KAAKP,MAAdD,KACR,EAAyDA,EAAKI,KAAKC,aAA7CI,EAAtB,EAAQC,aAAqCC,EAA7C,EAAmCC,SAC7BC,EAAoBb,EAAKc,iBAAiBC,MAAMC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,QAEjE,OACE,kBAAC,IAAD,CAAQC,UAAU,OAAOC,YAAY,GACnC,4BACED,UAAU,gEACVE,eAAa,wBACbC,QAASd,KAAKT,SACdwB,KAAK,UAEL,kBAAC,IAAD,CAAMC,KAAK,4BAA4BC,KAAM,OAE/C,4BAAQN,UAAU,UAChB,yBAAKA,UAAU,2BACb,6BACE,4BACE,qCAEE,6BAFF,UAKA,6BACA,wDAEF,kBAAC,IAAD,CAAaO,MAAOjB,EAAakB,UAAW,CAAC,MAAO,WAAY,SAAU,uBAIhF,8BACE,yBAAKR,UAAU,sBACb,yBAAKA,UAAU,UACb,2BAAOI,KAAK,QAAQK,GAAG,QAAQT,UAAU,aAAaK,KAAK,eAAeK,QAAM,EAACC,gBAAc,IAC7FnB,EAAQK,KAAI,SAACe,EAAGC,GAAJ,OACZ,2BAAOT,KAAK,QAAQK,GAAE,QAASI,EAAI,GAAKb,UAAU,aAAaK,KAAK,eAAeS,IAAKD,EAAGH,QAAM,OAGnG,yBAAKV,UAAU,uBACXN,EAAkBG,KAAI,SAACkB,EAASF,GAChC,IACEG,EAIED,EAJFC,MACAC,EAGEF,EAHFE,KACAC,EAEEH,EAFFG,WACAC,EACEJ,EADFI,cAEMC,EAASL,EAAQM,OAAjBD,KACFE,EAAUL,EAAKpB,KAAI,SAAA0B,GAAG,OAAI/B,EAAQgC,WAAU,SAAAZ,GAAC,OAAIA,EAAEH,KAAOc,KAAO,KACvE,OACE,yBAAKvB,UAAU,qCAAqCyB,WAAUH,EAAQzB,KAAI,SAAA6B,GAAC,aAAWA,KAAKC,KAAK,KAAMb,IAAKD,GACzG,kBAAC,IAAD,CAAMe,GAAIR,EAAMpB,UAAU,iBAAiB6B,MAAO,CAAEC,gBAAgB,QAASZ,EAAV,OACjE,yBAAKlB,UAAU,cACb,kBAAC,IAAD,CAAKA,UAAU,iBAAiB+B,MAAOZ,EAAca,gBAAgBD,MAAOE,IAAKjB,KAEnF,yBAAKhB,UAAU,eAEb,yBAAKA,UAAU,iBACb,kBAAC,IAAD,CAAaiB,KAAMA,YASjC,yBAAKjB,UAAU,sBACb,yBAAKA,UAAU,aACb,2BAAOA,UAAU,MAAMkC,QAAQ,SAA/B,QACE1C,EAAQK,KAAI,SAACe,EAAGC,GAAJ,OACZ,2BAAOb,UAAU,MAAMkC,QAAO,QAASrB,EAAI,GAAKC,IAAKD,GACnD,kBAAC,IAAD,CAAMR,KAAMO,EAAEuB,OADhB,IAGGvB,EAAEwB,iB,GApFcC","file":"component---src-pages-index-js-24efd6f6151bfa12d3db.js","sourcesContent":["/* eslint-disable jsx-a11y/label-has-for */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\nimport Layout from '../components/parts/Layout';\nimport Icon from '../components/common/Icon';\nimport SocialLinks from '../components/common/SocialLinks';\nimport ProjectTags from '../components/common/ProjectTags';\n\nexport default class IndexPage extends Component {\n  static propTypes = {\n    data: PropTypes.any.isRequired,\n  }\n\n  openChat = () => {\n    const { data } = this.props;\n    window.open(data.site.siteMetadata.chat_url, 'newwindow', 'width=500, height=600'); return false;\n  }\n\n  render() {\n    const { data } = this.props;\n    const { social_links: socialLinks, tag_spec: tagSpec } = data.site.siteMetadata;\n    const portfolioProjects = data.allPortfolioYaml.edges.map(e => e.node);\n\n    return (\n      <Layout className=\"home\" showNavbar={false}>\n        <button\n          className=\"btn btn-primary btn-action btn-lg tooltip tooltip-left circle\"\n          data-tooltip=\"Talk to me right meow\"\n          onClick={this.openChat}\n          type=\"button\"\n        >\n          <Icon name=\"social-facebook-messenger\" size={1.5} />\n        </button>\n        <header className=\"splash\">\n          <div className=\"container grid-720 hero\">\n            <div>\n              <h1>\n                <big>\n                  Brynn\n                  <br />\n                  Hawker\n                </big>\n                <br />\n                <small>Designer &times; Developer</small>\n              </h1>\n              <SocialLinks links={socialLinks} linkClass={['btn', 'btn-link', 'btn-lg', 'tooltip-bottom']} />\n            </div>\n          </div>\n        </header>\n        <main>\n          <div className=\"container grid-960\">\n            <div className=\"filter\">\n              <input type=\"radio\" id=\"tag-0\" className=\"filter-tag\" name=\"filter-radio\" hidden defaultChecked />\n              { tagSpec.map((t, i) => (\n                <input type=\"radio\" id={`tag-${i + 1}`} className=\"filter-tag\" name=\"filter-radio\" key={i} hidden />\n              ))}\n\n              <div className=\"filter-body columns\">\n                { portfolioProjects.map((project, i) => {\n                  const {\n                    title,\n                    tags,\n                    background,\n                    childFileYaml,\n                  } = project;\n                  const { slug } = project.fields;\n                  const tagNums = tags.map(tag => tagSpec.findIndex(t => t.id === tag) + 1);\n                  return (\n                    <div className=\"filter-item column col-4 col-sm-12\" data-tag={tagNums.map(n => `tag-${n}`).join(' ')} key={i}>\n                      <Link to={slug} className=\"card card-link\" style={{ backgroundImage: `url(\"${background}\")` }}>\n                        <div className=\"card-image\">\n                          <Img className=\"img-responsive\" fluid={childFileYaml.childImageSharp.fluid} alt={title} />\n                        </div>\n                        <div className=\"card-header\">\n                          {/* <div className=\"card-title h2\">{title}</div> */}\n                          <div className=\"card-subtitle\">\n                            <ProjectTags tags={tags} />\n                          </div>\n                        </div>\n                      </Link>\n                    </div>\n                  );\n                })}\n              </div>\n\n              <div className=\"filter-nav hide-sm\">\n                <div className=\"btn-group\">\n                  <label className=\"btn\" htmlFor=\"tag-0\"> All</label>\n                  { tagSpec.map((t, i) => (\n                    <label className=\"btn\" htmlFor={`tag-${i + 1}`} key={i}>\n                      <Icon name={t.icon} />\n                      &nbsp;\n                      {t.label}\n                    </label>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        </main>\n      </Layout>\n    );\n  }\n}\n\nexport const query = graphql`\n  query IndexQuery {\n    site {\n      siteMetadata {\n        title,\n        chat_url,\n        social_links {\n          href,\n          tooltip,\n          icon,\n        },\n        tag_spec {\n          id,\n          icon,\n          label\n        }\n      }\n    }\n    allPortfolioYaml (sort: { order: DESC, fields: [date] })  {\n      edges {\n        node {\n          title\n          tags\n          background\n          fields {\n            slug\n          }\n          childFileYaml {\n            childImageSharp {\n              fluid(maxWidth: 320) {\n                ...GatsbyImageSharpFluid_tracedSVG\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}